# .github/workflows/deploy-frontend.yml

name: Deploy Frontend to EC2

# Trigger the workflow on pushes to the main branch
on:
  push:
    branches:
      - main # Or your primary branch

jobs:
  build-and-deploy-frontend: # Renamed job for clarity
    runs-on: ubuntu-latest
    environment: EC2 # Use the same environment if secrets are scoped there

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image for Frontend
        id: build-push-frontend # Renamed step id
        uses: docker/build-push-action@v5
        with:
          context: . # Assumes Dockerfile is in the root directory
          file: ./Dockerfile # Explicit path to your Frontend Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ats-frontend:latest # Changed image tag
          # --- ADD THIS ---
          # Pass the backend URL during the build
          build-args: |
            VITE_API_URL=${{ secrets.VITE_API_URL }}
          # --- END ADD ---
          # Optional: Add caching
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy Frontend to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # --- Deployment Script on EC2 for Frontend ---

            # Variables for Frontend
            FE_IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/ats-frontend:latest" # Frontend image
            FE_CONTAINER_NAME="atsFrontend" # Frontend container name

            echo "--- Logging into Docker Hub on EC2 ---"
            echo ${{ secrets.DOCKERHUB_TOKEN }} | sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

            echo "--- Stopping existing frontend container ($FE_CONTAINER_NAME) ---"
            sudo docker stop $FE_CONTAINER_NAME || true # Ignore error if not running

            echo "--- Removing existing frontend container ($FE_CONTAINER_NAME) ---"
            sudo docker rm $FE_CONTAINER_NAME || true # Ignore error if not existing

            echo "--- Pulling latest frontend image ($FE_IMAGE_NAME) ---"
            sudo docker pull $FE_IMAGE_NAME

            # --- NO .env file needed for frontend runtime ---
            # The VITE_API_URL is already baked into the image during build.
            # Runtime ENV vars like PORT and HOST are set in the Dockerfile.

            echo "--- Running new frontend container ($FE_CONTAINER_NAME) ---"
            # Expose container port 3000 to host port 80 (standard HTTP)
            sudo docker run -d \
              -p 80:3000 \
              --name $FE_CONTAINER_NAME \
              --restart always \
              $FE_IMAGE_NAME

            echo "--- Frontend Deployment complete ---"

            # Optional: Clean up unused Docker images
            echo "--- Cleaning up dangling images ---"
            sudo docker image prune -f